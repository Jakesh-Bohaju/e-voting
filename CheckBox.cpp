
  /************************************************************************
  *************************************************************************
  *****************************  CheckBox.cpp  ****************************
  *************************************************************************
  ************************************************************************/

  /*************************************************************************

	  By :
		Muhammad Tahir Shahzad  [ MTS ]
		B.C.S Honours  [ 2000-04 ]
		Government College University Lahore
		Pakistan

      E-mail :  mtshome@wol.net.pk

    Web-Site :  www.mts-home.cjb.net  [ www.wol.net.pk/mtshome ]
		www.mtshome.cjb.net   [ www.geocities.com/mtahirshahzad ]

  *************************************************************************/

 /*************************************************************************/
 /*************************************************************************/
 //--------------------------  Header Files  -----------------------------//
 /*************************************************************************/
 /*************************************************************************/

 /*************************************************************************/
 //---------------------------  User Defined  ----------------------------//
 /*************************************************************************/

 # include   "Gui.h"
 # include "Mouse.h"

 /*************************************************************************/
 /*************************************************************************/
 //----------------------  Class Function Definitions  -------------------//
 /*************************************************************************/
 /*************************************************************************/

 /*************************************************************************
  *************************************************************************
  ****************************  CheckBox  ********************************
  *************************************************************************
  ************************************************************************/

 /*************************************************************************/
 //---------------------------  CheckBox( )  -----------------------------//
 /*************************************************************************/

 CheckBox::CheckBox( )
    {
       x_1=0;
       y_1=0;
       x_2=0;
       y_2=0;
       check=0;
       box_color=7;
       text_color=0;
       default_check=0;

       strset(Label,NULL);
    }

 /************************************************************************/
 //------------------------------  Init( )  -----------------------------//
 /************************************************************************/

 void CheckBox::Init(const int x,const int y,const char* Text,
				 const int default_value,int width,
					 const int bcolor, const int tcolor)
    {
       x_1=x;
       y_1=y;
       box_color=bcolor;
       text_color=tcolor;

       if(default_value!=0)
	  default_check=1;

       if(bcolor==0)
	  text_color=15;

       if(strlen(Text)<=90)
	  strcpy(Label,Text);

       else
	  {
	     strncpy(Label,Text,88);
	     strcat(Label,"..");
	  }

       if(width<0)
	  width=0;

       settextstyle(2,0,4);
	 x_2=(x_1+textwidth(Label)+width+35);

	 y_2=y_1+18;
    }

 /*************************************************************************/
 //------------------------------  Show( )  ------------------------------//
 /*************************************************************************/

 void CheckBox::Show( )
    {
       HideMouse( );
       GetCurrentSettings( );

       setfillstyle(1,box_color);
	 bar(x_1,y_1,x_2,y_2);

       if(box_color==0)
	  setcolor(8);

       else
	  setcolor(0);

	 rectangle((x_1+2),(y_1+2),(x_1+15),(y_2-3));

       if(box_color==8 || box_color==0)
	  setcolor(7);

       else
	  setcolor(8);

	 rectangle((x_1+3),(y_1+3),(x_1+16),(y_2-2));

       setfillstyle(1,15);
	 bar((x_1+4),(y_1+4),(x_1+14),(y_2-4));

       setcolor(text_color);
       settextstyle(2,0,4);
	 outtextxy((x_1+30),(y_1+3),Label);

       RestorePreviousSettings( );
       ShowMouse( );

       if(default_check==1)
	  Press( );
    }

 /************************************************************************/
 //-----------------------------  Press( )  -----------------------------//
 /************************************************************************/

 void CheckBox::Press( )
    {
       HideMouse( );
       GetCurrentSettings( );

       if(box_color==0 || box_color==8)
	  setcolor(15);

       else
	  setcolor(0);

       setlinestyle(1,1,0);
	 rectangle((x_1+24),(y_1+1),(x_2-1),(y_2-1));

       setlinestyle(0,0,0);

       setfillstyle(1,7);
	 bar((x_1+4),(y_1+4),(x_1+14),(y_2-4));

       int check_1[6]={(x_1+5),(y_1+9),(x_1+7),(y_1+11),(x_1+12),(y_1+6)};
       int check_2[6]={(x_1+5),(y_1+10),(x_1+7),(y_1+12),(x_1+13),(y_1+6)};

       if(check==1)
	  {
	     setcolor(8);
	       drawpoly(3,check_1);

	     setcolor(0);
	       drawpoly(3,check_2);
	  }

       ShowMouse( );

       while(Hit( ) && LeftMouseKeyPressed( ) && !kbhit( ));

       HideMouse( );

       if(check==0)
	  {
	     setfillstyle(1,15);
	       bar((x_1+4),(y_1+4),(x_1+14),(y_2-4));

	     setcolor(8);
	       drawpoly(3,check_1);

	     setcolor(0);
	       drawpoly(3,check_2);

	     check=1;
	  }

       else if(check==1)
	  {
	     setfillstyle(1,15);
	       bar((x_1+4),(y_1+4),(x_1+14),(y_2-4));

	     check=0;
	  }

       else
	  {
	     setfillstyle(1,15);
	       bar((x_1+4),(y_1+4),(x_1+14),(y_2-4));

	     if(check==1)
		{
		   setcolor(8);
		     drawpoly(3,check_1);

		   setcolor(0);
		     drawpoly(3,check_2);
		}
	  }

       setcolor(box_color);
	 rectangle((x_1+24),(y_1+1),(x_2-1),(y_2-1));

       RestorePreviousSettings( );
       ShowMouse( );
    }

 /************************************************************************/
 //-----------------------  SelectAndRelease( )  ------------------------//
 /************************************************************************/

 void CheckBox::SelectAndRelease( )
    {
       GetCurrentSettings( );
       HideMouse( );

       if(box_color==0 || box_color==8)
	  setcolor(15);

       else
	  setcolor(0);

       setlinestyle(1,1,0);
	 rectangle((x_1+24),(y_1+1),(x_2-1),(y_2-1));

       setlinestyle(0,0,0);

       ShowMouse( );

       while(Hit( ) && !LeftMouseKeyPressed( ) && !kbhit( ));

       HideMouse( );

       setcolor(box_color);
	 rectangle((x_1+24),(y_1+1),(x_2-1),(y_2-1));

       ShowMouse( );
       RestorePreviousSettings( );
    }

 /************************************************************************/
 //---------------------------  Checked( )  -----------------------------//
 /************************************************************************/

 const int CheckBox::Checked( )
    {
	return check;
    }

 /************************************************************************/
 //-----------------------------  Hit( )  -------------------------------//
 /************************************************************************/

 const int CheckBox::Hit( )
    {
	int x=0;
	int y=0;

	GetMouseCoordinates(&x,&y);

	return ((x>=(x_1+1) && x<=(x_2-1) && y>=(y_1+1) && y<=(y_2-1))?1:0);
    }

 /************************************************************************/
 /************************************************************************/
 //-----------------------------  THE END  ------------------------------//
 /************************************************************************/
 /************************************************************************/
